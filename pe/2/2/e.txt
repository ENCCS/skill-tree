# PE2.2-E Profiling
# Background
# Aim
# Outcomes
  * Detect performance issues and bottlenecks caused, for example, by inefficient programming, memory accesses, I/O operations, cache-misses, page-faults, and parallelization overheads.
  * Use advanced performance analysis tools like Vampir.
  * Use the standard MPI profiling interface (PMPI) to control the built-in performance analysis functionality in MPI.
